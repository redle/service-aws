// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kv.proto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "kv.proto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace kv {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* data_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  data_reflection_ = NULL;
const ::google::protobuf::Descriptor* set_request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  set_request_reflection_ = NULL;
const ::google::protobuf::Descriptor* set_response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  set_response_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* set_response_error_t_descriptor_ = NULL;
const ::google::protobuf::Descriptor* get_request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  get_request_reflection_ = NULL;
const ::google::protobuf::Descriptor* get_response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  get_response_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* get_response_error_t_descriptor_ = NULL;
const ::google::protobuf::Descriptor* req_envelope_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  req_envelope_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* req_envelope_msg_type_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_kv_2eproto_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_kv_2eproto_2eproto() {
  protobuf_AddDesc_kv_2eproto_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "kv.proto.proto");
  GOOGLE_CHECK(file != NULL);
  data_descriptor_ = file->message_type(0);
  static const int data_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(data, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(data, value_),
  };
  data_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      data_descriptor_,
      data::default_instance_,
      data_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(data, _has_bits_[0]),
      -1,
      -1,
      sizeof(data),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(data, _internal_metadata_),
      -1);
  set_request_descriptor_ = file->message_type(1);
  static const int set_request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(set_request, req_),
  };
  set_request_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      set_request_descriptor_,
      set_request::default_instance_,
      set_request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(set_request, _has_bits_[0]),
      -1,
      -1,
      sizeof(set_request),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(set_request, _internal_metadata_),
      -1);
  set_response_descriptor_ = file->message_type(2);
  static const int set_response_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(set_response, error_),
  };
  set_response_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      set_response_descriptor_,
      set_response::default_instance_,
      set_response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(set_response, _has_bits_[0]),
      -1,
      -1,
      sizeof(set_response),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(set_response, _internal_metadata_),
      -1);
  set_response_error_t_descriptor_ = set_response_descriptor_->enum_type(0);
  get_request_descriptor_ = file->message_type(3);
  static const int get_request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(get_request, key_),
  };
  get_request_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      get_request_descriptor_,
      get_request::default_instance_,
      get_request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(get_request, _has_bits_[0]),
      -1,
      -1,
      sizeof(get_request),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(get_request, _internal_metadata_),
      -1);
  get_response_descriptor_ = file->message_type(4);
  static const int get_response_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(get_response, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(get_response, req_),
  };
  get_response_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      get_response_descriptor_,
      get_response::default_instance_,
      get_response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(get_response, _has_bits_[0]),
      -1,
      -1,
      sizeof(get_response),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(get_response, _internal_metadata_),
      -1);
  get_response_error_t_descriptor_ = get_response_descriptor_->enum_type(0);
  req_envelope_descriptor_ = file->message_type(5);
  static const int req_envelope_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_envelope, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_envelope, set_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_envelope, set_resp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_envelope, get_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_envelope, get_resp_),
  };
  req_envelope_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      req_envelope_descriptor_,
      req_envelope::default_instance_,
      req_envelope_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_envelope, _has_bits_[0]),
      -1,
      -1,
      sizeof(req_envelope),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(req_envelope, _internal_metadata_),
      -1);
  req_envelope_msg_type_descriptor_ = req_envelope_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_kv_2eproto_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      data_descriptor_, &data::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      set_request_descriptor_, &set_request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      set_response_descriptor_, &set_response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      get_request_descriptor_, &get_request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      get_response_descriptor_, &get_response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      req_envelope_descriptor_, &req_envelope::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_kv_2eproto_2eproto() {
  delete data::default_instance_;
  delete data_reflection_;
  delete set_request::default_instance_;
  delete set_request_reflection_;
  delete set_response::default_instance_;
  delete set_response_reflection_;
  delete get_request::default_instance_;
  delete get_request_reflection_;
  delete get_response::default_instance_;
  delete get_response_reflection_;
  delete req_envelope::default_instance_;
  delete req_envelope_reflection_;
}

void protobuf_AddDesc_kv_2eproto_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_kv_2eproto_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016kv.proto.proto\022\010kv.proto\"\"\n\004data\022\013\n\003ke"
    "y\030\001 \002(\t\022\r\n\005value\030\002 \002(\t\"*\n\013set_request\022\033\n"
    "\003req\030\001 \002(\0132\016.kv.proto.data\"^\n\014set_respon"
    "se\022-\n\005error\030\001 \002(\0162\036.kv.proto.set_respons"
    "e.error_t\"\037\n\007error_t\022\006\n\002ok\020\001\022\014\n\010internal"
    "\020\002\"\032\n\013get_request\022\013\n\003key\030\001 \002(\t\"\212\001\n\014get_r"
    "esponse\022-\n\005error\030\001 \002(\0162\036.kv.proto.get_re"
    "sponse.error_t\022\033\n\003req\030\002 \001(\0132\016.kv.proto.d"
    "ata\".\n\007error_t\022\006\n\002ok\020\001\022\r\n\tnot_found\020\002\022\014\n"
    "\010internal\020\003\"\273\002\n\014req_envelope\022-\n\004type\030\001 \002"
    "(\0162\037.kv.proto.req_envelope.msg_type\022&\n\007s"
    "et_req\030\002 \001(\0132\025.kv.proto.set_request\022(\n\010s"
    "et_resp\030\003 \001(\0132\026.kv.proto.set_response\022&\n"
    "\007get_req\030\004 \001(\0132\025.kv.proto.get_request\022(\n"
    "\010get_resp\030\005 \001(\0132\026.kv.proto.get_response\""
    "X\n\010msg_type\022\021\n\rset_request_t\020\001\022\022\n\016set_re"
    "sponse_t\020\002\022\021\n\rget_request_t\020\003\022\022\n\016get_res"
    "ponse_t\020\004", 689);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "kv.proto.proto", &protobuf_RegisterTypes);
  data::default_instance_ = new data();
  set_request::default_instance_ = new set_request();
  set_response::default_instance_ = new set_response();
  get_request::default_instance_ = new get_request();
  get_response::default_instance_ = new get_response();
  req_envelope::default_instance_ = new req_envelope();
  data::default_instance_->InitAsDefaultInstance();
  set_request::default_instance_->InitAsDefaultInstance();
  set_response::default_instance_->InitAsDefaultInstance();
  get_request::default_instance_->InitAsDefaultInstance();
  get_response::default_instance_->InitAsDefaultInstance();
  req_envelope::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_kv_2eproto_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_kv_2eproto_2eproto {
  StaticDescriptorInitializer_kv_2eproto_2eproto() {
    protobuf_AddDesc_kv_2eproto_2eproto();
  }
} static_descriptor_initializer_kv_2eproto_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int data::kKeyFieldNumber;
const int data::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

data::data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kv.proto.data)
}

void data::InitAsDefaultInstance() {
}

data::data(const data& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kv.proto.data)
}

void data::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

data::~data() {
  // @@protoc_insertion_point(destructor:kv.proto.data)
  SharedDtor();
}

void data::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* data::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return data_descriptor_;
}

const data& data::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_kv_2eproto_2eproto();
  return *default_instance_;
}

data* data::default_instance_ = NULL;

data* data::New(::google::protobuf::Arena* arena) const {
  data* n = new data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void data::Clear() {
// @@protoc_insertion_point(message_clear_start:kv.proto.data)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_key()) {
      key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kv.proto.data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kv.proto.data.key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // required string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kv.proto.data.value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kv.proto.data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kv.proto.data)
  return false;
#undef DO_
}

void data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kv.proto.data)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kv.proto.data.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kv.proto.data.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kv.proto.data)
}

::google::protobuf::uint8* data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kv.proto.data)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kv.proto.data.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kv.proto.data.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kv.proto.data)
  return target;
}

int data::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kv.proto.data)
  int total_size = 0;

  if (has_key()) {
    // required string key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  if (has_value()) {
    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  return total_size;
}
int data::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:kv.proto.data)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());

    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kv.proto.data)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const data* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kv.proto.data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kv.proto.data)
    MergeFrom(*source);
  }
}

void data::MergeFrom(const data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kv.proto.data)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kv.proto.data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void data::CopyFrom(const data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kv.proto.data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool data::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void data::Swap(data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void data::InternalSwap(data* other) {
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata data::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = data_descriptor_;
  metadata.reflection = data_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// data

// required string key = 1;
bool data::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void data::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void data::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void data::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
 const ::std::string& data::key() const {
  // @@protoc_insertion_point(field_get:kv.proto.data.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void data::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:kv.proto.data.key)
}
 void data::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kv.proto.data.key)
}
 void data::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kv.proto.data.key)
}
 ::std::string* data::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:kv.proto.data.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* data::release_key() {
  // @@protoc_insertion_point(field_release:kv.proto.data.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void data::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:kv.proto.data.key)
}

// required string value = 2;
bool data::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void data::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void data::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void data::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
 const ::std::string& data::value() const {
  // @@protoc_insertion_point(field_get:kv.proto.data.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void data::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:kv.proto.data.value)
}
 void data::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kv.proto.data.value)
}
 void data::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kv.proto.data.value)
}
 ::std::string* data::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:kv.proto.data.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* data::release_value() {
  // @@protoc_insertion_point(field_release:kv.proto.data.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void data::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:kv.proto.data.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int set_request::kReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

set_request::set_request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kv.proto.set_request)
}

void set_request::InitAsDefaultInstance() {
  req_ = const_cast< ::kv::proto::data*>(&::kv::proto::data::default_instance());
}

set_request::set_request(const set_request& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kv.proto.set_request)
}

void set_request::SharedCtor() {
  _cached_size_ = 0;
  req_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

set_request::~set_request() {
  // @@protoc_insertion_point(destructor:kv.proto.set_request)
  SharedDtor();
}

void set_request::SharedDtor() {
  if (this != default_instance_) {
    delete req_;
  }
}

void set_request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* set_request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return set_request_descriptor_;
}

const set_request& set_request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_kv_2eproto_2eproto();
  return *default_instance_;
}

set_request* set_request::default_instance_ = NULL;

set_request* set_request::New(::google::protobuf::Arena* arena) const {
  set_request* n = new set_request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void set_request::Clear() {
// @@protoc_insertion_point(message_clear_start:kv.proto.set_request)
  if (has_req()) {
    if (req_ != NULL) req_->::kv::proto::data::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool set_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kv.proto.set_request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .kv.proto.data req = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kv.proto.set_request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kv.proto.set_request)
  return false;
#undef DO_
}

void set_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kv.proto.set_request)
  // required .kv.proto.data req = 1;
  if (has_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->req_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kv.proto.set_request)
}

::google::protobuf::uint8* set_request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kv.proto.set_request)
  // required .kv.proto.data req = 1;
  if (has_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->req_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kv.proto.set_request)
  return target;
}

int set_request::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:kv.proto.set_request)
  int total_size = 0;

  // required .kv.proto.data req = 1;
  if (has_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->req_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void set_request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kv.proto.set_request)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const set_request* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const set_request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kv.proto.set_request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kv.proto.set_request)
    MergeFrom(*source);
  }
}

void set_request::MergeFrom(const set_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kv.proto.set_request)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_req()) {
      mutable_req()->::kv::proto::data::MergeFrom(from.req());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void set_request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kv.proto.set_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void set_request::CopyFrom(const set_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kv.proto.set_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool set_request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  return true;
}

void set_request::Swap(set_request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void set_request::InternalSwap(set_request* other) {
  std::swap(req_, other->req_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata set_request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = set_request_descriptor_;
  metadata.reflection = set_request_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// set_request

// required .kv.proto.data req = 1;
bool set_request::has_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void set_request::set_has_req() {
  _has_bits_[0] |= 0x00000001u;
}
void set_request::clear_has_req() {
  _has_bits_[0] &= ~0x00000001u;
}
void set_request::clear_req() {
  if (req_ != NULL) req_->::kv::proto::data::Clear();
  clear_has_req();
}
const ::kv::proto::data& set_request::req() const {
  // @@protoc_insertion_point(field_get:kv.proto.set_request.req)
  return req_ != NULL ? *req_ : *default_instance_->req_;
}
::kv::proto::data* set_request::mutable_req() {
  set_has_req();
  if (req_ == NULL) {
    req_ = new ::kv::proto::data;
  }
  // @@protoc_insertion_point(field_mutable:kv.proto.set_request.req)
  return req_;
}
::kv::proto::data* set_request::release_req() {
  // @@protoc_insertion_point(field_release:kv.proto.set_request.req)
  clear_has_req();
  ::kv::proto::data* temp = req_;
  req_ = NULL;
  return temp;
}
void set_request::set_allocated_req(::kv::proto::data* req) {
  delete req_;
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_set_allocated:kv.proto.set_request.req)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* set_response_error_t_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return set_response_error_t_descriptor_;
}
bool set_response_error_t_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const set_response_error_t set_response::ok;
const set_response_error_t set_response::internal;
const set_response_error_t set_response::error_t_MIN;
const set_response_error_t set_response::error_t_MAX;
const int set_response::error_t_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int set_response::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

set_response::set_response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kv.proto.set_response)
}

void set_response::InitAsDefaultInstance() {
}

set_response::set_response(const set_response& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kv.proto.set_response)
}

void set_response::SharedCtor() {
  _cached_size_ = 0;
  error_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

set_response::~set_response() {
  // @@protoc_insertion_point(destructor:kv.proto.set_response)
  SharedDtor();
}

void set_response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void set_response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* set_response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return set_response_descriptor_;
}

const set_response& set_response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_kv_2eproto_2eproto();
  return *default_instance_;
}

set_response* set_response::default_instance_ = NULL;

set_response* set_response::New(::google::protobuf::Arena* arena) const {
  set_response* n = new set_response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void set_response::Clear() {
// @@protoc_insertion_point(message_clear_start:kv.proto.set_response)
  error_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool set_response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kv.proto.set_response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .kv.proto.set_response.error_t error = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::kv::proto::set_response_error_t_IsValid(value)) {
            set_error(static_cast< ::kv::proto::set_response_error_t >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kv.proto.set_response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kv.proto.set_response)
  return false;
#undef DO_
}

void set_response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kv.proto.set_response)
  // required .kv.proto.set_response.error_t error = 1;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kv.proto.set_response)
}

::google::protobuf::uint8* set_response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kv.proto.set_response)
  // required .kv.proto.set_response.error_t error = 1;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kv.proto.set_response)
  return target;
}

int set_response::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:kv.proto.set_response)
  int total_size = 0;

  // required .kv.proto.set_response.error_t error = 1;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void set_response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kv.proto.set_response)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const set_response* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const set_response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kv.proto.set_response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kv.proto.set_response)
    MergeFrom(*source);
  }
}

void set_response::MergeFrom(const set_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kv.proto.set_response)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error()) {
      set_error(from.error());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void set_response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kv.proto.set_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void set_response::CopyFrom(const set_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kv.proto.set_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool set_response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void set_response::Swap(set_response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void set_response::InternalSwap(set_response* other) {
  std::swap(error_, other->error_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata set_response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = set_response_descriptor_;
  metadata.reflection = set_response_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// set_response

// required .kv.proto.set_response.error_t error = 1;
bool set_response::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void set_response::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
void set_response::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
void set_response::clear_error() {
  error_ = 1;
  clear_has_error();
}
 ::kv::proto::set_response_error_t set_response::error() const {
  // @@protoc_insertion_point(field_get:kv.proto.set_response.error)
  return static_cast< ::kv::proto::set_response_error_t >(error_);
}
 void set_response::set_error(::kv::proto::set_response_error_t value) {
  assert(::kv::proto::set_response_error_t_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:kv.proto.set_response.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int get_request::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

get_request::get_request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kv.proto.get_request)
}

void get_request::InitAsDefaultInstance() {
}

get_request::get_request(const get_request& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kv.proto.get_request)
}

void get_request::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

get_request::~get_request() {
  // @@protoc_insertion_point(destructor:kv.proto.get_request)
  SharedDtor();
}

void get_request::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void get_request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* get_request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return get_request_descriptor_;
}

const get_request& get_request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_kv_2eproto_2eproto();
  return *default_instance_;
}

get_request* get_request::default_instance_ = NULL;

get_request* get_request::New(::google::protobuf::Arena* arena) const {
  get_request* n = new get_request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void get_request::Clear() {
// @@protoc_insertion_point(message_clear_start:kv.proto.get_request)
  if (has_key()) {
    key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool get_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kv.proto.get_request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kv.proto.get_request.key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kv.proto.get_request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kv.proto.get_request)
  return false;
#undef DO_
}

void get_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kv.proto.get_request)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kv.proto.get_request.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kv.proto.get_request)
}

::google::protobuf::uint8* get_request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kv.proto.get_request)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kv.proto.get_request.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kv.proto.get_request)
  return target;
}

int get_request::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:kv.proto.get_request)
  int total_size = 0;

  // required string key = 1;
  if (has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void get_request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kv.proto.get_request)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const get_request* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const get_request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kv.proto.get_request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kv.proto.get_request)
    MergeFrom(*source);
  }
}

void get_request::MergeFrom(const get_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kv.proto.get_request)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void get_request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kv.proto.get_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void get_request::CopyFrom(const get_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kv.proto.get_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool get_request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void get_request::Swap(get_request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void get_request::InternalSwap(get_request* other) {
  key_.Swap(&other->key_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata get_request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = get_request_descriptor_;
  metadata.reflection = get_request_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// get_request

// required string key = 1;
bool get_request::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void get_request::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void get_request::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void get_request::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
 const ::std::string& get_request::key() const {
  // @@protoc_insertion_point(field_get:kv.proto.get_request.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void get_request::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:kv.proto.get_request.key)
}
 void get_request::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kv.proto.get_request.key)
}
 void get_request::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kv.proto.get_request.key)
}
 ::std::string* get_request::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:kv.proto.get_request.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* get_request::release_key() {
  // @@protoc_insertion_point(field_release:kv.proto.get_request.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void get_request::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:kv.proto.get_request.key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* get_response_error_t_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return get_response_error_t_descriptor_;
}
bool get_response_error_t_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const get_response_error_t get_response::ok;
const get_response_error_t get_response::not_found;
const get_response_error_t get_response::internal;
const get_response_error_t get_response::error_t_MIN;
const get_response_error_t get_response::error_t_MAX;
const int get_response::error_t_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int get_response::kErrorFieldNumber;
const int get_response::kReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

get_response::get_response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kv.proto.get_response)
}

void get_response::InitAsDefaultInstance() {
  req_ = const_cast< ::kv::proto::data*>(&::kv::proto::data::default_instance());
}

get_response::get_response(const get_response& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kv.proto.get_response)
}

void get_response::SharedCtor() {
  _cached_size_ = 0;
  error_ = 1;
  req_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

get_response::~get_response() {
  // @@protoc_insertion_point(destructor:kv.proto.get_response)
  SharedDtor();
}

void get_response::SharedDtor() {
  if (this != default_instance_) {
    delete req_;
  }
}

void get_response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* get_response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return get_response_descriptor_;
}

const get_response& get_response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_kv_2eproto_2eproto();
  return *default_instance_;
}

get_response* get_response::default_instance_ = NULL;

get_response* get_response::New(::google::protobuf::Arena* arena) const {
  get_response* n = new get_response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void get_response::Clear() {
// @@protoc_insertion_point(message_clear_start:kv.proto.get_response)
  if (_has_bits_[0 / 32] & 3u) {
    error_ = 1;
    if (has_req()) {
      if (req_ != NULL) req_->::kv::proto::data::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool get_response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kv.proto.get_response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .kv.proto.get_response.error_t error = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::kv::proto::get_response_error_t_IsValid(value)) {
            set_error(static_cast< ::kv::proto::get_response_error_t >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_req;
        break;
      }

      // optional .kv.proto.data req = 2;
      case 2: {
        if (tag == 18) {
         parse_req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kv.proto.get_response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kv.proto.get_response)
  return false;
#undef DO_
}

void get_response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kv.proto.get_response)
  // required .kv.proto.get_response.error_t error = 1;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error(), output);
  }

  // optional .kv.proto.data req = 2;
  if (has_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->req_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kv.proto.get_response)
}

::google::protobuf::uint8* get_response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kv.proto.get_response)
  // required .kv.proto.get_response.error_t error = 1;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error(), target);
  }

  // optional .kv.proto.data req = 2;
  if (has_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->req_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kv.proto.get_response)
  return target;
}

int get_response::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:kv.proto.get_response)
  int total_size = 0;

  // required .kv.proto.get_response.error_t error = 1;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }
  // optional .kv.proto.data req = 2;
  if (has_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->req_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void get_response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kv.proto.get_response)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const get_response* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const get_response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kv.proto.get_response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kv.proto.get_response)
    MergeFrom(*source);
  }
}

void get_response::MergeFrom(const get_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kv.proto.get_response)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error()) {
      set_error(from.error());
    }
    if (from.has_req()) {
      mutable_req()->::kv::proto::data::MergeFrom(from.req());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void get_response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kv.proto.get_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void get_response::CopyFrom(const get_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kv.proto.get_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool get_response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  return true;
}

void get_response::Swap(get_response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void get_response::InternalSwap(get_response* other) {
  std::swap(error_, other->error_);
  std::swap(req_, other->req_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata get_response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = get_response_descriptor_;
  metadata.reflection = get_response_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// get_response

// required .kv.proto.get_response.error_t error = 1;
bool get_response::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void get_response::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
void get_response::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
void get_response::clear_error() {
  error_ = 1;
  clear_has_error();
}
 ::kv::proto::get_response_error_t get_response::error() const {
  // @@protoc_insertion_point(field_get:kv.proto.get_response.error)
  return static_cast< ::kv::proto::get_response_error_t >(error_);
}
 void get_response::set_error(::kv::proto::get_response_error_t value) {
  assert(::kv::proto::get_response_error_t_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:kv.proto.get_response.error)
}

// optional .kv.proto.data req = 2;
bool get_response::has_req() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void get_response::set_has_req() {
  _has_bits_[0] |= 0x00000002u;
}
void get_response::clear_has_req() {
  _has_bits_[0] &= ~0x00000002u;
}
void get_response::clear_req() {
  if (req_ != NULL) req_->::kv::proto::data::Clear();
  clear_has_req();
}
const ::kv::proto::data& get_response::req() const {
  // @@protoc_insertion_point(field_get:kv.proto.get_response.req)
  return req_ != NULL ? *req_ : *default_instance_->req_;
}
::kv::proto::data* get_response::mutable_req() {
  set_has_req();
  if (req_ == NULL) {
    req_ = new ::kv::proto::data;
  }
  // @@protoc_insertion_point(field_mutable:kv.proto.get_response.req)
  return req_;
}
::kv::proto::data* get_response::release_req() {
  // @@protoc_insertion_point(field_release:kv.proto.get_response.req)
  clear_has_req();
  ::kv::proto::data* temp = req_;
  req_ = NULL;
  return temp;
}
void get_response::set_allocated_req(::kv::proto::data* req) {
  delete req_;
  req_ = req;
  if (req) {
    set_has_req();
  } else {
    clear_has_req();
  }
  // @@protoc_insertion_point(field_set_allocated:kv.proto.get_response.req)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* req_envelope_msg_type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return req_envelope_msg_type_descriptor_;
}
bool req_envelope_msg_type_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const req_envelope_msg_type req_envelope::set_request_t;
const req_envelope_msg_type req_envelope::set_response_t;
const req_envelope_msg_type req_envelope::get_request_t;
const req_envelope_msg_type req_envelope::get_response_t;
const req_envelope_msg_type req_envelope::msg_type_MIN;
const req_envelope_msg_type req_envelope::msg_type_MAX;
const int req_envelope::msg_type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int req_envelope::kTypeFieldNumber;
const int req_envelope::kSetReqFieldNumber;
const int req_envelope::kSetRespFieldNumber;
const int req_envelope::kGetReqFieldNumber;
const int req_envelope::kGetRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

req_envelope::req_envelope()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kv.proto.req_envelope)
}

void req_envelope::InitAsDefaultInstance() {
  set_req_ = const_cast< ::kv::proto::set_request*>(&::kv::proto::set_request::default_instance());
  set_resp_ = const_cast< ::kv::proto::set_response*>(&::kv::proto::set_response::default_instance());
  get_req_ = const_cast< ::kv::proto::get_request*>(&::kv::proto::get_request::default_instance());
  get_resp_ = const_cast< ::kv::proto::get_response*>(&::kv::proto::get_response::default_instance());
}

req_envelope::req_envelope(const req_envelope& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kv.proto.req_envelope)
}

void req_envelope::SharedCtor() {
  _cached_size_ = 0;
  type_ = 1;
  set_req_ = NULL;
  set_resp_ = NULL;
  get_req_ = NULL;
  get_resp_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

req_envelope::~req_envelope() {
  // @@protoc_insertion_point(destructor:kv.proto.req_envelope)
  SharedDtor();
}

void req_envelope::SharedDtor() {
  if (this != default_instance_) {
    delete set_req_;
    delete set_resp_;
    delete get_req_;
    delete get_resp_;
  }
}

void req_envelope::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* req_envelope::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return req_envelope_descriptor_;
}

const req_envelope& req_envelope::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_kv_2eproto_2eproto();
  return *default_instance_;
}

req_envelope* req_envelope::default_instance_ = NULL;

req_envelope* req_envelope::New(::google::protobuf::Arena* arena) const {
  req_envelope* n = new req_envelope;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void req_envelope::Clear() {
// @@protoc_insertion_point(message_clear_start:kv.proto.req_envelope)
  if (_has_bits_[0 / 32] & 31u) {
    type_ = 1;
    if (has_set_req()) {
      if (set_req_ != NULL) set_req_->::kv::proto::set_request::Clear();
    }
    if (has_set_resp()) {
      if (set_resp_ != NULL) set_resp_->::kv::proto::set_response::Clear();
    }
    if (has_get_req()) {
      if (get_req_ != NULL) get_req_->::kv::proto::get_request::Clear();
    }
    if (has_get_resp()) {
      if (get_resp_ != NULL) get_resp_->::kv::proto::get_response::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool req_envelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kv.proto.req_envelope)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .kv.proto.req_envelope.msg_type type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::kv::proto::req_envelope_msg_type_IsValid(value)) {
            set_type(static_cast< ::kv::proto::req_envelope_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_set_req;
        break;
      }

      // optional .kv.proto.set_request set_req = 2;
      case 2: {
        if (tag == 18) {
         parse_set_req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_req()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_set_resp;
        break;
      }

      // optional .kv.proto.set_response set_resp = 3;
      case 3: {
        if (tag == 26) {
         parse_set_resp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_resp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_get_req;
        break;
      }

      // optional .kv.proto.get_request get_req = 4;
      case 4: {
        if (tag == 34) {
         parse_get_req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_req()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_get_resp;
        break;
      }

      // optional .kv.proto.get_response get_resp = 5;
      case 5: {
        if (tag == 42) {
         parse_get_resp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_resp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kv.proto.req_envelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kv.proto.req_envelope)
  return false;
#undef DO_
}

void req_envelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kv.proto.req_envelope)
  // required .kv.proto.req_envelope.msg_type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .kv.proto.set_request set_req = 2;
  if (has_set_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->set_req_, output);
  }

  // optional .kv.proto.set_response set_resp = 3;
  if (has_set_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->set_resp_, output);
  }

  // optional .kv.proto.get_request get_req = 4;
  if (has_get_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->get_req_, output);
  }

  // optional .kv.proto.get_response get_resp = 5;
  if (has_get_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->get_resp_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kv.proto.req_envelope)
}

::google::protobuf::uint8* req_envelope::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kv.proto.req_envelope)
  // required .kv.proto.req_envelope.msg_type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .kv.proto.set_request set_req = 2;
  if (has_set_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->set_req_, false, target);
  }

  // optional .kv.proto.set_response set_resp = 3;
  if (has_set_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->set_resp_, false, target);
  }

  // optional .kv.proto.get_request get_req = 4;
  if (has_get_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->get_req_, false, target);
  }

  // optional .kv.proto.get_response get_resp = 5;
  if (has_get_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->get_resp_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kv.proto.req_envelope)
  return target;
}

int req_envelope::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:kv.proto.req_envelope)
  int total_size = 0;

  // required .kv.proto.req_envelope.msg_type type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }
  if (_has_bits_[1 / 32] & 30u) {
    // optional .kv.proto.set_request set_req = 2;
    if (has_set_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->set_req_);
    }

    // optional .kv.proto.set_response set_resp = 3;
    if (has_set_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->set_resp_);
    }

    // optional .kv.proto.get_request get_req = 4;
    if (has_get_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->get_req_);
    }

    // optional .kv.proto.get_response get_resp = 5;
    if (has_get_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->get_resp_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void req_envelope::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kv.proto.req_envelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const req_envelope* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const req_envelope>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kv.proto.req_envelope)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kv.proto.req_envelope)
    MergeFrom(*source);
  }
}

void req_envelope::MergeFrom(const req_envelope& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kv.proto.req_envelope)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_set_req()) {
      mutable_set_req()->::kv::proto::set_request::MergeFrom(from.set_req());
    }
    if (from.has_set_resp()) {
      mutable_set_resp()->::kv::proto::set_response::MergeFrom(from.set_resp());
    }
    if (from.has_get_req()) {
      mutable_get_req()->::kv::proto::get_request::MergeFrom(from.get_req());
    }
    if (from.has_get_resp()) {
      mutable_get_resp()->::kv::proto::get_response::MergeFrom(from.get_resp());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void req_envelope::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kv.proto.req_envelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void req_envelope::CopyFrom(const req_envelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kv.proto.req_envelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool req_envelope::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_set_req()) {
    if (!this->set_req_->IsInitialized()) return false;
  }
  if (has_set_resp()) {
    if (!this->set_resp_->IsInitialized()) return false;
  }
  if (has_get_req()) {
    if (!this->get_req_->IsInitialized()) return false;
  }
  if (has_get_resp()) {
    if (!this->get_resp_->IsInitialized()) return false;
  }
  return true;
}

void req_envelope::Swap(req_envelope* other) {
  if (other == this) return;
  InternalSwap(other);
}
void req_envelope::InternalSwap(req_envelope* other) {
  std::swap(type_, other->type_);
  std::swap(set_req_, other->set_req_);
  std::swap(set_resp_, other->set_resp_);
  std::swap(get_req_, other->get_req_);
  std::swap(get_resp_, other->get_resp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata req_envelope::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = req_envelope_descriptor_;
  metadata.reflection = req_envelope_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// req_envelope

// required .kv.proto.req_envelope.msg_type type = 1;
bool req_envelope::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void req_envelope::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void req_envelope::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void req_envelope::clear_type() {
  type_ = 1;
  clear_has_type();
}
 ::kv::proto::req_envelope_msg_type req_envelope::type() const {
  // @@protoc_insertion_point(field_get:kv.proto.req_envelope.type)
  return static_cast< ::kv::proto::req_envelope_msg_type >(type_);
}
 void req_envelope::set_type(::kv::proto::req_envelope_msg_type value) {
  assert(::kv::proto::req_envelope_msg_type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:kv.proto.req_envelope.type)
}

// optional .kv.proto.set_request set_req = 2;
bool req_envelope::has_set_req() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void req_envelope::set_has_set_req() {
  _has_bits_[0] |= 0x00000002u;
}
void req_envelope::clear_has_set_req() {
  _has_bits_[0] &= ~0x00000002u;
}
void req_envelope::clear_set_req() {
  if (set_req_ != NULL) set_req_->::kv::proto::set_request::Clear();
  clear_has_set_req();
}
const ::kv::proto::set_request& req_envelope::set_req() const {
  // @@protoc_insertion_point(field_get:kv.proto.req_envelope.set_req)
  return set_req_ != NULL ? *set_req_ : *default_instance_->set_req_;
}
::kv::proto::set_request* req_envelope::mutable_set_req() {
  set_has_set_req();
  if (set_req_ == NULL) {
    set_req_ = new ::kv::proto::set_request;
  }
  // @@protoc_insertion_point(field_mutable:kv.proto.req_envelope.set_req)
  return set_req_;
}
::kv::proto::set_request* req_envelope::release_set_req() {
  // @@protoc_insertion_point(field_release:kv.proto.req_envelope.set_req)
  clear_has_set_req();
  ::kv::proto::set_request* temp = set_req_;
  set_req_ = NULL;
  return temp;
}
void req_envelope::set_allocated_set_req(::kv::proto::set_request* set_req) {
  delete set_req_;
  set_req_ = set_req;
  if (set_req) {
    set_has_set_req();
  } else {
    clear_has_set_req();
  }
  // @@protoc_insertion_point(field_set_allocated:kv.proto.req_envelope.set_req)
}

// optional .kv.proto.set_response set_resp = 3;
bool req_envelope::has_set_resp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void req_envelope::set_has_set_resp() {
  _has_bits_[0] |= 0x00000004u;
}
void req_envelope::clear_has_set_resp() {
  _has_bits_[0] &= ~0x00000004u;
}
void req_envelope::clear_set_resp() {
  if (set_resp_ != NULL) set_resp_->::kv::proto::set_response::Clear();
  clear_has_set_resp();
}
const ::kv::proto::set_response& req_envelope::set_resp() const {
  // @@protoc_insertion_point(field_get:kv.proto.req_envelope.set_resp)
  return set_resp_ != NULL ? *set_resp_ : *default_instance_->set_resp_;
}
::kv::proto::set_response* req_envelope::mutable_set_resp() {
  set_has_set_resp();
  if (set_resp_ == NULL) {
    set_resp_ = new ::kv::proto::set_response;
  }
  // @@protoc_insertion_point(field_mutable:kv.proto.req_envelope.set_resp)
  return set_resp_;
}
::kv::proto::set_response* req_envelope::release_set_resp() {
  // @@protoc_insertion_point(field_release:kv.proto.req_envelope.set_resp)
  clear_has_set_resp();
  ::kv::proto::set_response* temp = set_resp_;
  set_resp_ = NULL;
  return temp;
}
void req_envelope::set_allocated_set_resp(::kv::proto::set_response* set_resp) {
  delete set_resp_;
  set_resp_ = set_resp;
  if (set_resp) {
    set_has_set_resp();
  } else {
    clear_has_set_resp();
  }
  // @@protoc_insertion_point(field_set_allocated:kv.proto.req_envelope.set_resp)
}

// optional .kv.proto.get_request get_req = 4;
bool req_envelope::has_get_req() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void req_envelope::set_has_get_req() {
  _has_bits_[0] |= 0x00000008u;
}
void req_envelope::clear_has_get_req() {
  _has_bits_[0] &= ~0x00000008u;
}
void req_envelope::clear_get_req() {
  if (get_req_ != NULL) get_req_->::kv::proto::get_request::Clear();
  clear_has_get_req();
}
const ::kv::proto::get_request& req_envelope::get_req() const {
  // @@protoc_insertion_point(field_get:kv.proto.req_envelope.get_req)
  return get_req_ != NULL ? *get_req_ : *default_instance_->get_req_;
}
::kv::proto::get_request* req_envelope::mutable_get_req() {
  set_has_get_req();
  if (get_req_ == NULL) {
    get_req_ = new ::kv::proto::get_request;
  }
  // @@protoc_insertion_point(field_mutable:kv.proto.req_envelope.get_req)
  return get_req_;
}
::kv::proto::get_request* req_envelope::release_get_req() {
  // @@protoc_insertion_point(field_release:kv.proto.req_envelope.get_req)
  clear_has_get_req();
  ::kv::proto::get_request* temp = get_req_;
  get_req_ = NULL;
  return temp;
}
void req_envelope::set_allocated_get_req(::kv::proto::get_request* get_req) {
  delete get_req_;
  get_req_ = get_req;
  if (get_req) {
    set_has_get_req();
  } else {
    clear_has_get_req();
  }
  // @@protoc_insertion_point(field_set_allocated:kv.proto.req_envelope.get_req)
}

// optional .kv.proto.get_response get_resp = 5;
bool req_envelope::has_get_resp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void req_envelope::set_has_get_resp() {
  _has_bits_[0] |= 0x00000010u;
}
void req_envelope::clear_has_get_resp() {
  _has_bits_[0] &= ~0x00000010u;
}
void req_envelope::clear_get_resp() {
  if (get_resp_ != NULL) get_resp_->::kv::proto::get_response::Clear();
  clear_has_get_resp();
}
const ::kv::proto::get_response& req_envelope::get_resp() const {
  // @@protoc_insertion_point(field_get:kv.proto.req_envelope.get_resp)
  return get_resp_ != NULL ? *get_resp_ : *default_instance_->get_resp_;
}
::kv::proto::get_response* req_envelope::mutable_get_resp() {
  set_has_get_resp();
  if (get_resp_ == NULL) {
    get_resp_ = new ::kv::proto::get_response;
  }
  // @@protoc_insertion_point(field_mutable:kv.proto.req_envelope.get_resp)
  return get_resp_;
}
::kv::proto::get_response* req_envelope::release_get_resp() {
  // @@protoc_insertion_point(field_release:kv.proto.req_envelope.get_resp)
  clear_has_get_resp();
  ::kv::proto::get_response* temp = get_resp_;
  get_resp_ = NULL;
  return temp;
}
void req_envelope::set_allocated_get_resp(::kv::proto::get_response* get_resp) {
  delete get_resp_;
  get_resp_ = get_resp;
  if (get_resp) {
    set_has_get_resp();
  } else {
    clear_has_get_resp();
  }
  // @@protoc_insertion_point(field_set_allocated:kv.proto.req_envelope.get_resp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace kv

// @@protoc_insertion_point(global_scope)
